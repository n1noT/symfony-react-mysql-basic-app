security:
  password_hashers:
    App\Entity\User: 'auto'

  providers:
    users:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/_(profiler|wdt)
      security: false
    main:
      pattern: ^/api 
      stateless: true
      provider: users
      #custom_authenticators:
      #    - App\Security\CookieJwtAuthenticator

    admin:
      pattern: ^/admin
      provider: users
      stateless: false
      form_login:
        login_path: /admin/login
        check_path: /admin/login
        default_target_path: /admin
        enable_csrf: true
        csrf_token_id: authenticate
      logout:
        path: /admin/logout
        target: /admin/login
      # DÃ©sactivez stateless pour permettre l'utilisation de sessions

    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
